函数的参数：
	
	位置参数:
		def power(x):
			return x * x

		def power(x,n):
			s = 1
			while n > 0:
				b = n - 1
				s = s * x
			return s 
	
	默认参数:
		def power(x, n=2):
			s = 1
			while n > 0:
				n = n -1
				s = s * x
			return s

	//默认参数可以简化调用的难度
	//当函数有多个参数时，变化大的参数放前面，变化小的参数放后面，变化小的参数可以作为默认参数
	
		def enroll(name, gender, age=6, city='Beijing'):
			print('name:', name)
			print('gender:', gender)
			print('age:', age)
			print('city:', city)

	//包含默认参数的函数调用时，既可以按照顺序提供部分参数 enroll('Adam', 'M', 7)
	//不按照顺序提供默认参数时，需要把参数名写上 enroll('Bob', 'M', city='Tianjin')

		def add_end(L=[]):
			L.append('END')
			return L

	//add_end()重复调用时结果出错
	//默认参数不可以为可变对象
		def add_end(L=None):
			if L is None:
				L = []
			L.append('END')
			return L

	可变参数:
	//可变参数允许你传入0或任意个参数，这些参数在函数调用时自动组装为一个tuple
		def calc(*numbers):
			sum = 0
			for n in numbers:
				sum = sum + n * n
			return sum
	//当有一个list或则tuple,需要调用可变参数时，在list或tuple前加*好，把list或tuple变成可变参数传进去
		calc(*nums)

	关键字参数:
	//关键字参数允许你传入0或任意个参数，这些关键字在函数内部自动组装为一个dict
		def person(name, age, **kw):
			print('name:', name, 'age:', age, 'other:', kw)
	//当有一个dict需要调用关键字参数时，在dict前加**
		person('Jack', 24, **extra)

	命名关键字参数:
		def person(name, age, *, city, job):
			print(name,age,city,job)
		//命名关键字参数必须传入参数名